services:
  mysql:
    container_name: mysql
    image: mysql/mysql-server:8.0
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: 'pets_home'
      MYSQL_USER: root
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MYSQL_HOST: 'mysql'

    volumes:
      - data:/volumes/database

    expose:
      - '3306'
  backend:
    container_name: pets_home_backend
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - "8080:8080"

    environment:
      ALLOWED_ORIGINS: ${ALLOWED_ORIGIN}
      PORT: '8080'
      MYSQL_HOST: 'mysql'
      MYSQL_PWD: 'password'
      Redis_Host: 'redis'
      AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME}

    depends_on:
      - mysql
      - redis
  
  proxy:
    image: nginx:1.17
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  redis:
    container_name: redis
    image: redis:latest

    ports:
      - 6379:6379

  frontend:
    container_name: pets_home_frontend
    image: react
    build: 
      context: ./frontend
    ports:
      - 3000:3000
    environment:
      REACT_APP_AWS_S3_ACCESS_KEY: ${AWS_S3_ACCESS_KEY}
      REACT_APP_AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
      REACT_APP_AWS_S3_SECRET_KEY: ${AWS_S3_SECRET_KEY}
      REACT_APP_AWS_REGION: ${AWS_ORIGIN}
      REACT_APP_BASE_URL: ${BASE_URL:-"http://localhost:8080"}
      REACT_APP_HOME: ${REACT_APP_HOME:-"http://localhost:3000/"}


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka-schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DEBUG: "true"
volumes:
    data:
      external: true

